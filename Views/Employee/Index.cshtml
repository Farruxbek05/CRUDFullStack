@model IEnumerable<CRUDdemo.Models.Employee>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">Employee Management</h1>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row mb-3">
                <div class="col-md-6">
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create New Employee
                    </a>

                    <button type="button" class="btn btn-info ms-2" data-bs-toggle="modal" data-bs-target="#importModal">
                        <i class="fas fa-upload"></i> Import Excel
                    </button>
                </div>
                <div class="col-md-6 text-end">
                    <div class="btn-group" role="group">
                        <a asp-action="ExportToExcel" class="btn btn-success">
                            <i class="fas fa-file-excel"></i> Export to Excel
                        </a>
                        <a asp-action="ExportToPdf" class="btn btn-danger">
                            <i class="fas fa-file-pdf"></i> Export to PDF
                        </a>
                    </div>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5 class="card-title">Total Employees</h5>
                            <h3 class="card-text">@Model.Count()</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5 class="card-title">Married</h5>
                            <h3 class="card-text">@Model.Count(e => e.IsMarried)</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5 class="card-title">Single</h5>
                            <h3 class="card-text">@Model.Count(e => !e.IsMarried)</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card bg-warning text-white">
                        <div class="card-body">
                            <h5 class="card-title">With Children</h5>
                            <h3 class="card-text">@Model.Count(e => e.Children != null && e.Children.Any())</h3>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Employee List</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                                    <th>@Html.DisplayNameFor(model => model.Gender)</th>
                                    <th>@Html.DisplayNameFor(model => model.Company)</th>
                                    <th>@Html.DisplayNameFor(model => model.Department)</th>
                                    <th>Marital Status</th>
                                    <th>Children</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var emp in Model)
                                {
                                    <tr>
                                        <td>@emp.Id</td>
                                        <td>@Html.DisplayFor(modelItem => emp.Name)</td>
                                        <td>
                                            <span class="badge bg-@(emp.Gender?.ToLower() == "male" ? "primary" : "pink") text-white">
                                                @Html.DisplayFor(modelItem => emp.Gender)
                                            </span>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => emp.Company)</td>
                                        <td>@Html.DisplayFor(modelItem => emp.Department)</td>
                                        <td>
                                            @if (emp.IsMarried)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="fas fa-heart"></i> Married
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">
                                                    <i class="fas fa-user"></i> Single
                                                </span>
                                            }
                                        </td>
                                        <td>
                                            @if (emp.IsMarried && emp.Children != null && emp.Children.Any())
                                            {
                                                <span class="badge bg-primary text-white">
                                                    <i class="fas fa-child"></i>
                                                    @emp.Children.Count @((emp.Children.Count == 1) ? "Child" : "Children")
                                                </span>
                                                <br>
                                                <small class="text-muted">
                                                    @string.Join(", ", emp.Children.Take(2).Select(c => c.Name))@(emp.Children.Count > 2 ? "..." : "")
                                                </small>
                                                <br>
                                                <a asp-controller="Child" asp-action="Index" asp-route-employeeId="@emp.Id"
                                                   class="btn btn-sm btn-outline-primary mt-1">
                                                    <i class="fas fa-eye"></i> View
                                                </a>
                                            }
                                            else if (emp.IsMarried)
                                            {
                                                <span class="text-muted">No Children</span>
                                                <br>
                                                <a asp-controller="Child" asp-action="Create" asp-route-employeeId="@emp.Id"
                                                   class="btn btn-sm btn-success mt-1">
                                                    <i class="fas fa-plus"></i> Add Child
                                                </a>
                                            }
                                            else
                                            {
                                                <span class="text-muted">N/A</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-action="Details" asp-route-id="@emp.Id"
                                                   class="btn btn-sm btn-info" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@emp.Id"
                                                   class="btn btn-sm btn-warning" title="Edit">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <button type="button"
                                                        class="btn btn-sm btn-danger"
                                                        title="Delete"
                                                        onclick="confirmDelete(@emp.Id, '@emp.Name')">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (!Model.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-users fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No employees found</h5>
                            <p class="text-muted">Start by creating your first employee.</p>
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Create New Employee
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Import Modal -->
<div class="modal fade" id="importModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Excel Import</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="ImportFromExcel" method="post" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="file" class="form-label">Excel faylni tanlang:</label>
                        <input type="file" name="file" id="file" class="form-control" accept=".xlsx,.xls" required />
                        <div class="form-text">Faqat .xlsx va .xls formatdagi fayllar qabul qilinadi.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-upload"></i> Import
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<form id="deleteForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" id="employeeIdInput" name="id" />
</form>

<script>
    function confirmDelete(employeeId, employeeName) {
        var message = `Are you sure you want to delete employee "${employeeName}"?\n\nThis will also delete all their children records!`;

        if (confirm(message)) {
            document.getElementById('employeeIdInput').value = employeeId;

            document.getElementById('deleteForm').action = '@Url.Action("Delete", "Employee")';

            document.getElementById('deleteForm').submit();
        }
    }

    function confirmDeleteEnhanced(employeeId, employeeName, hasChildren) {
        var message = `⚠️ DELETE EMPLOYEE CONFIRMATION ⚠️\n\n` +
                      `Employee: ${employeeName}\n\n`;

        if (hasChildren) {
            message += `⚠️ WARNING: This employee has children records!\n` +
                       `All children will also be deleted!\n\n`;
        }

        message += `This action cannot be undone!\n\n` +
                   `Click OK to proceed or Cancel to abort.`;

        if (confirm(message)) {
            document.getElementById('employeeIdInput').value = employeeId;
            document.getElementById('deleteForm').action = '@Url.Action("Delete", "Employee")';
            document.getElementById('deleteForm').submit();
        }
    }

    function confirmDeleteSweet(employeeId, employeeName, hasChildren) {
        var title = 'Delete Employee?';
        var text = `Are you sure you want to delete "${employeeName}"?`;
        var icon = 'warning';

        if (hasChildren) {
            title = '⚠️ Delete Employee & Children?';
            text = `This will delete "${employeeName}" and ALL their children records!`;
            icon = 'error';
        }

        Swal.fire({
            title: title,
            text: text,
            icon: icon,
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('employeeIdInput').value = employeeId;
                document.getElementById('deleteForm').action = '@Url.Action("Delete", "Employee")';
                document.getElementById('deleteForm').submit();
            }
        });
    }
</script>

<style>
    .bg-pink {
        background-color: #e91e63 !important;
    }

    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid rgba(0, 0, 0, 0.125);
    }

    .table th {
        border-top: none;
        font-weight: 600;
    }

    .btn-group .btn {
        margin-right: 2px;
    }

        .btn-group .btn:last-child {
            margin-right: 0;
        }

    .badge {
        font-size: 0.75em;
    }

    .alert {
        border: none;
        border-radius: 8px;
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }
</style>